[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:[m[K In member function â€˜[01m[Kvoid SubscriberNode::callbackIMU(sensor_msgs::msg::Imu_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:45:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(0, 0) = [01;31m[Kmsg->orientation_covariance * msg->orientation_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(0, 0) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(0, 0) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(0, 0) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:45:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(1, 1) = [01;31m[Kmsg->orientation_covariance * msg->orientation_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(1, 1) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(1, 1) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(1, 1) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:45:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(2, 2) = [01;31m[Kmsg->orientation_covariance * msg->orientation_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(2, 2) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(2, 2) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(2, 2) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:50:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(3, 3) = [01;31m[Kmsg->angular_velocity_covariance * msg->angular_velocity_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(3, 3) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(3, 3) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(3, 3) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:50:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(4, 4) = [01;31m[Kmsg->angular_velocity_covariance * msg->angular_velocity_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(4, 4) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(4, 4) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(4, 4) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:50:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(5, 5) = [01;31m[Kmsg->angular_velocity_covariance * msg->angular_velocity_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(5, 5) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(5, 5) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(5, 5) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:29:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator+[m[Kâ€™ (operand types are â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ and â€˜[01m[Kconst Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>[m[Kâ€™)
       current_state = [01;31m[Kstate + K * y[m[K;
                       [01;31m[K~~~~~~^~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:445:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator+(const std::complex<_Tp>&)
     [01;36m[Koperator[m[K+(const complex<_Tp>& __x)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:445:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:344:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator+(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K+(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:344:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kconst Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:335:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator+(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K+(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:335:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:326:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator+(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K+(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:326:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/vector:65:0[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/executor.hpp:27[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:145[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/stl_bvector.h:387:3:[m[K [01;36m[Knote: [m[Kcandidate: std::_Bit_const_iterator std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)
   [01;36m[Koperator[m[K+(ptrdiff_t __n, const _Bit_const_iterator& __x)
   [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/stl_bvector.h:387:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ to â€˜[01m[Kstd::ptrdiff_t {aka long int}[m[Kâ€™
[01m[K/usr/include/c++/7/bits/stl_bvector.h:297:3:[m[K [01;36m[Knote: [m[Kcandidate: std::_Bit_iterator std::operator+(std::ptrdiff_t, const std::_Bit_iterator&)
   [01;36m[Koperator[m[K+(ptrdiff_t __n, const _Bit_iterator& __x)
   [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/stl_bvector.h:297:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ to â€˜[01m[Kstd::ptrdiff_t {aka long int}[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/string:52:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.h:5995:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)
     [01;36m[Koperator[m[K+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.h:5995:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ is not derived from â€˜[01m[Kstd::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/string:52:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.h:5989:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)
     [01;36m[Koperator[m[K+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.h:5989:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ is not derived from â€˜[01m[Kstd::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/string:52:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.h:5983:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)
     [01;36m[Koperator[m[K+(_CharT __lhs,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.h:5983:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  types â€˜[01m[Kstd::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™ and â€˜[01m[Kconst Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>[m[Kâ€™ have incompatible cv-qualifiers
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/string:52:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.h:5977:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)
     [01;36m[Koperator[m[K+(const _CharT* __lhs,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.h:5977:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst _CharT*[m[Kâ€™ and â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/string:52:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.h:5965:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)
     [01;36m[Koperator[m[K+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.h:5965:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ is not derived from â€˜[01m[Kstd::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/string:52:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.h:5959:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)
     [01;36m[Koperator[m[K+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.h:5959:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/string:52:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.h:5953:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     [01;36m[Koperator[m[K+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.h:5953:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ is not derived from â€˜[01m[Kstd::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/string:52:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.h:5941:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, _CharT)
     [01;36m[Koperator[m[K+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.h:5941:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/string:52:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.h:5925:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     [01;36m[Koperator[m[K+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.h:5925:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/string:53:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.tcc:1173:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     [01;36m[Koperator[m[K+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.tcc:1173:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kconst Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/string:53:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.tcc:1157:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     [01;36m[Koperator[m[K+(const _CharT* __lhs,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.tcc:1157:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst _CharT*[m[Kâ€™ and â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/string:52:0[m[K,
                 from [01m[K/usr/include/c++/7/stdexcept:39[m[K,
                 from [01m[K/usr/include/c++/7/array:39[m[K,
                 from [01m[K/usr/include/c++/7/tuple:39[m[K,
                 from [01m[K/usr/include/c++/7/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/7/memory:80[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/basic_string.h:5888:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     [01;36m[Koperator[m[K+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/basic_string.h:5888:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/bits/stl_algobase.h:67:0[m[K,
                 from [01m[K/usr/include/c++/7/memory:62[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/stl_iterator.h:1201:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)
     [01;36m[Koperator[m[K+(typename move_iterator<_Iterator>::difference_type __n,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/stl_iterator.h:1201:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kconst Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::move_iterator<_IteratorL>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/bits/stl_algobase.h:67:0[m[K,
                 from [01m[K/usr/include/c++/7/memory:62[m[K,
                 from [01m[K/opt/ros/eloquent/include/rclcpp/rclcpp.hpp:143[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/stl_iterator.h:400:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)
     [01;36m[Koperator[m[K+(typename reverse_iterator<_Iterator>::difference_type __n,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/stl_iterator.h:400:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:204:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kconst Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::reverse_iterator<_Iterator>[m[Kâ€™
       current_state = state + K * [01;36m[Ky[m[K;
                                   [01;36m[K^[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:[m[K In member function â€˜[01m[Kvoid SubscriberNode::callbackGroundTruth(gazebo_msgs::msg::LinkStates_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:330:74:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   void callbackGroundTruth(const gazebo_msgs::msg::LinkStates::SharedPtr [01;35m[Kmsg[m[K)
                                                                          [01;35m[K^~~[m[K
make[2]: *** [CMakeFiles/state_subscriber.dir/src/state_subscriber.cpp.o] Error 1
make[1]: *** [CMakeFiles/state_subscriber.dir/all] Error 2
make: *** [all] Error 2
