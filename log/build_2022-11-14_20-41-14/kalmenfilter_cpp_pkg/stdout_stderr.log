[35m[1mScanning dependencies of target state_subscriber[0m
[ 50%] [32mBuilding CXX object CMakeFiles/state_subscriber.dir/src/state_subscriber.cpp.o[0m
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:[m[K In member function â€˜[01m[Kvoid SubscriberNode::callbackIMU(sensor_msgs::msg::Imu_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:45:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(0, 0) = [01;31m[Kmsg->orientation_covariance * msg->orientation_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(0, 0) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(0, 0) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(0, 0) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:45:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(1, 1) = [01;31m[Kmsg->orientation_covariance * msg->orientation_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(1, 1) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(1, 1) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(1, 1) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:45:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(2, 2) = [01;31m[Kmsg->orientation_covariance * msg->orientation_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(2, 2) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(2, 2) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(2, 2) = msg->orientation_covariance * msg->[01;36m[Korientation_covariance[m[K;
                                                    [01;36m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:50:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(3, 3) = [01;31m[Kmsg->angular_velocity_covariance * msg->angular_velocity_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(3, 3) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(3, 3) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(3, 3) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:50:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(4, 4) = [01;31m[Kmsg->angular_velocity_covariance * msg->angular_velocity_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(4, 4) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(4, 4) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(4, 4) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:50:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ and â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™)
       R(5, 5) = [01;31m[Kmsg->angular_velocity_covariance * msg->angular_velocity_covariance[m[K;
                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:404:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(5, 5) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:395:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(5, 5) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:80:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8[m[K:
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)
     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/complex:386:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:57:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}[m[Kâ€™ is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
       R(5, 5) = msg->angular_velocity_covariance * msg->[01;36m[Kangular_velocity_covariance[m[K;
                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:[m[K In member function â€˜[01m[Kvoid SubscriberNode::callbackGroundTruth(gazebo_msgs::msg::LinkStates_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:330:74:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   void callbackGroundTruth(const gazebo_msgs::msg::LinkStates::SharedPtr [01;35m[Kmsg[m[K)
                                                                          [01;35m[K^~~[m[K
CMakeFiles/state_subscriber.dir/build.make:62: recipe for target 'CMakeFiles/state_subscriber.dir/src/state_subscriber.cpp.o' failed
make[2]: *** [CMakeFiles/state_subscriber.dir/src/state_subscriber.cpp.o] Error 1
CMakeFiles/Makefile2:99: recipe for target 'CMakeFiles/state_subscriber.dir/all' failed
Makefile:140: recipe for target 'all' failed
make[1]: *** [CMakeFiles/state_subscriber.dir/all] Error 2
make: *** [all] Error 2
