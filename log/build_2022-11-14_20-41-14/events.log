[0.000000] (-) TimerEvent: {}
[0.001819] (kalmenfilter_cpp_pkg) JobQueued: {'identifier': 'kalmenfilter_cpp_pkg', 'dependencies': OrderedDict()}
[0.006177] (kalmenfilter_cpp_pkg) JobStarted: {'identifier': 'kalmenfilter_cpp_pkg'}
[0.098187] (-) TimerEvent: {}
[0.137198] (kalmenfilter_cpp_pkg) JobProgress: {'identifier': 'kalmenfilter_cpp_pkg', 'progress': 'cmake'}
[0.140703] (kalmenfilter_cpp_pkg) JobProgress: {'identifier': 'kalmenfilter_cpp_pkg', 'progress': 'build'}
[0.143776] (kalmenfilter_cpp_pkg) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/zeiad/sensorfusion_ros2_ws/build/kalmenfilter_cpp_pkg', '--', '-j12', '-l12'], 'cwd': '/home/zeiad/sensorfusion_ros2_ws/build/kalmenfilter_cpp_pkg', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'zeiad'), ('LC_TIME', 'ar_EG.UTF-8'), ('TEXTDOMAIN', 'im-config'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '2729'), ('XDG_SESSION_TYPE', 'x11'), ('LD_LIBRARY_PATH', '/home/zeiad/plankton_ros2_ws/install/uuv_world_ros_plugins/lib:/home/zeiad/plankton_ros2_ws/install/uuv_world_ros_plugins_msgs/lib:/home/zeiad/plankton_ros2_ws/install/uuv_world_plugins/lib:/home/zeiad/plankton_ros2_ws/install/uuv_thruster_manager/lib:/home/zeiad/plankton_ros2_ws/install/uuv_sensor_ros_plugins/lib:/home/zeiad/plankton_ros2_ws/install/uuv_sensor_ros_plugins_msgs/lib:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_ros_plugins/lib:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_ros_plugins_msgs/lib:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_plugins/lib:/home/zeiad/plankton_ros2_ws/install/uuv_control_msgs/lib:/home/zeiad/plankton_ros2_ws/install/uuv_auv_control_allocator/lib:/home/zeiad/sonar_ws/install/image_geometry/lib:/home/zeiad/sonar_ws/install/cv_bridge/lib:/home/zeiad/sonar_ws/install/custom_ros_interfaces/lib:/usr/lib/x86_64-linux-gnu/gazebo-9/plugins:/opt/ros/eloquent/opt/yaml_cpp_vendor/lib:/opt/ros/eloquent/opt/rviz_ogre_vendor/lib:/opt/ros/eloquent/lib/x86_64-linux-gnu:/opt/ros/eloquent/lib:/usr/lib/x86_64-linux-gnu/gazebo-9/plugins'), ('SHLVL', '1'), ('QT4_IM_MODULE', 'xim'), ('HOME', '/home/zeiad'), ('OLDPWD', '/home/zeiad'), ('DESKTOP_SESSION', 'ubuntu'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GAZEBO_MASTER_URI', 'http://localhost:11345'), ('GTK_MODULES', 'gail:atk-bridge'), ('ROS_PYTHON_VERSION', '3'), ('LC_MONETARY', 'ar_EG.UTF-8'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('COLCON_PREFIX_PATH', '/home/zeiad/sensorfusion_ros2_ws/install:/home/zeiad/plankton_ros2_ws/install:/home/zeiad/sonar_ws/install'), ('IM_CONFIG_PHASE', '2'), ('ROS_DISTRO', 'eloquent'), ('LOGNAME', 'zeiad'), ('GTK_IM_MODULE', 'ibus'), ('_', '/usr/bin/colcon'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('ROS_VERSION', '2'), ('GAZEBO_MODEL_PATH', '/usr/share/gazebo-9/models:'), ('USERNAME', 'zeiad'), ('XDG_SESSION_ID', '1'), ('TERM', 'xterm-256color'), ('RBENV_SHELL', 'bash'), ('ROS_LOCALHOST_ONLY', '0'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '1'), ('OGRE_RESOURCE_PATH', '/usr/lib/x86_64-linux-gnu/OGRE-1.9.0'), ('PATH', '/home/zeiad/sonar_ws/install/bluerobotics-ping/bin:/opt/ros/eloquent/bin:/home/zeiad/.rbenv/shims:/home/zeiad/.rbenv/bin:/home/zeiad/.rbenv/shims:/home/zeiad/ardupilot/Tools/autotest:/opt/gcc-arm-none-eabi-6-2017-q2-update/bin:/opt/gcc-arm-none-eabi-9-2020-q2-update/bin:/home/zeiad/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/zeiad-IdeaPad-L340-15IRH-Gaming:@/tmp/.ICE-unix/2390,unix/zeiad-IdeaPad-L340-15IRH-Gaming:/tmp/.ICE-unix/2390'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/a5acdaee_b82f_4f2a_a58a_331c31b334a5'), ('LC_ADDRESS', 'ar_EG.UTF-8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'ar_EG.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XMODIFIERS', '@im=ibus'), ('GNOME_TERMINAL_SERVICE', ':1.465'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('AMENT_PREFIX_PATH', '/home/zeiad/sensorfusion_ros2_ws/install/kalmenfilter_cpp_pkg:/home/zeiad/plankton_ros2_ws/install/plankton:/home/zeiad/plankton_ros2_ws/install/uuv_simulator:/home/zeiad/plankton_ros2_ws/install/uuv_world_ros_plugins:/home/zeiad/plankton_ros2_ws/install/uuv_control_utils:/home/zeiad/plankton_ros2_ws/install/uuv_world_ros_plugins_msgs:/home/zeiad/plankton_ros2_ws/install/uuv_world_plugins:/home/zeiad/plankton_ros2_ws/install/uuv_trajectory_control:/home/zeiad/plankton_ros2_ws/install/uuv_teleop:/home/zeiad/plankton_ros2_ws/install/uuv_thruster_manager:/home/zeiad/plankton_ros2_ws/install/uuv_descriptions:/home/zeiad/plankton_ros2_ws/install/uuv_sensor_ros_plugins:/home/zeiad/plankton_ros2_ws/install/uuv_sensor_ros_plugins_msgs:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_worlds:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_ros_plugins:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_ros_plugins_msgs:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_plugins:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo:/home/zeiad/plankton_ros2_ws/install/uuv_control_msgs:/home/zeiad/plankton_ros2_ws/install/uuv_control_cascaded_pid:/home/zeiad/plankton_ros2_ws/install/uuv_auv_control_allocator:/home/zeiad/plankton_ros2_ws/install/uuv_assistants:/home/zeiad/plankton_ros2_ws/install/plankton_utils:/home/zeiad/sonar_ws/install/vision_opencv:/home/zeiad/sonar_ws/install/ping360_sonar:/home/zeiad/sonar_ws/install/opencv_tests:/home/zeiad/sonar_ws/install/image_geometry:/home/zeiad/sonar_ws/install/cv_bridge:/home/zeiad/sonar_ws/install/custom_ros_interfaces:/opt/ros/eloquent'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('LC_NAME', 'ar_EG.UTF-8'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'ar_EG.UTF-8'), ('TEXTDOMAINDIR', '/usr/share/locale/'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GAZEBO_RESOURCE_PATH', '/usr/share/gazebo-9:'), ('LC_IDENTIFICATION', 'ar_EG.UTF-8'), ('XDG_VTNR', '1'), ('QT_IM_MODULE', 'ibus'), ('GAZEBO_MODEL_DATABASE_URI', 'http://models.gazebosim.org'), ('LC_ALL', 'en_US.UTF-8'), ('PWD', '/home/zeiad/sensorfusion_ros2_ws/build/kalmenfilter_cpp_pkg'), ('CLUTTER_IM_MODULE', 'xim'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('GAZEBO_PLUGIN_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-9/plugins:'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('LC_NUMERIC', 'ar_EG.UTF-8'), ('PYTHONPATH', '/home/zeiad/plankton_ros2_ws/install/uuv_world_ros_plugins_msgs/lib/python3.6/site-packages:/home/zeiad/plankton_ros2_ws/install/uuv_trajectory_control/lib/python3.6/site-packages:/home/zeiad/plankton_ros2_ws/install/uuv_thruster_manager/lib/python3.6/site-packages:/home/zeiad/plankton_ros2_ws/install/uuv_sensor_ros_plugins_msgs/lib/python3.6/site-packages:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_ros_plugins_msgs/lib/python3.6/site-packages:/home/zeiad/plankton_ros2_ws/install/uuv_control_msgs/lib/python3.6/site-packages:/home/zeiad/plankton_ros2_ws/install/uuv_control_cascaded_pid/lib/python3.6/site-packages:/home/zeiad/plankton_ros2_ws/install/uuv_auv_control_allocator/lib/python3.6/site-packages:/home/zeiad/plankton_ros2_ws/install/uuv_assistants/lib/python3.6/site-packages:/home/zeiad/plankton_ros2_ws/install/plankton_utils/lib/python3.6/site-packages:/home/zeiad/sonar_ws/install/ping360_sonar/lib/python3.6/site-packages:/home/zeiad/sonar_ws/install/opencv_tests/lib/python3.6/site-packages:/home/zeiad/sonar_ws/install/image_geometry/lib/python3.6/site-packages:/home/zeiad/sonar_ws/install/cv_bridge/lib/python3.6/site-packages:/home/zeiad/sonar_ws/install/custom_ros_interfaces/lib/python3.6/site-packages:/home/zeiad/sonar_ws/install/bluerobotics-ping/lib/python3.6/site-packages:/opt/ros/eloquent/lib/python3.6/site-packages'), ('LC_PAPER', 'ar_EG.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '5202'), ('CMAKE_PREFIX_PATH', '/home/zeiad/sensorfusion_ros2_ws/install/kalmenfilter_cpp_pkg:/home/zeiad/plankton_ros2_ws/install/plankton:/home/zeiad/plankton_ros2_ws/install/uuv_simulator:/home/zeiad/plankton_ros2_ws/install/uuv_world_ros_plugins:/home/zeiad/plankton_ros2_ws/install/uuv_control_utils:/home/zeiad/plankton_ros2_ws/install/uuv_world_ros_plugins_msgs:/home/zeiad/plankton_ros2_ws/install/uuv_world_plugins:/home/zeiad/plankton_ros2_ws/install/uuv_trajectory_control:/home/zeiad/plankton_ros2_ws/install/uuv_teleop:/home/zeiad/plankton_ros2_ws/install/uuv_thruster_manager:/home/zeiad/plankton_ros2_ws/install/uuv_descriptions:/home/zeiad/plankton_ros2_ws/install/uuv_sensor_ros_plugins:/home/zeiad/plankton_ros2_ws/install/uuv_sensor_ros_plugins_msgs:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_worlds:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_ros_plugins:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_ros_plugins_msgs:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo_plugins:/home/zeiad/plankton_ros2_ws/install/uuv_gazebo:/home/zeiad/plankton_ros2_ws/install/uuv_control_msgs:/home/zeiad/plankton_ros2_ws/install/uuv_control_cascaded_pid:/home/zeiad/plankton_ros2_ws/install/uuv_auv_control_allocator:/home/zeiad/plankton_ros2_ws/install/uuv_assistants:/home/zeiad/plankton_ros2_ws/install/plankton_utils:/home/zeiad/sonar_ws/install/vision_opencv:/home/zeiad/sonar_ws/install/image_geometry:/home/zeiad/sonar_ws/install/cv_bridge:/home/zeiad/sonar_ws/install/custom_ros_interfaces:/home/zeiad/sonar_ws/install/ping360_sonar:/home/zeiad/sonar_ws/install/opencv_tests:/opt/ros/eloquent')]), 'shell': False}
[0.198852] (-) TimerEvent: {}
[0.300450] (-) TimerEvent: {}
[0.394623] (kalmenfilter_cpp_pkg) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target state_subscriber\x1b[0m\n'}
[0.400789] (-) TimerEvent: {}
[0.501622] (-) TimerEvent: {}
[0.526362] (kalmenfilter_cpp_pkg) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/state_subscriber.dir/src/state_subscriber.cpp.o\x1b[0m\n'}
[0.601946] (-) TimerEvent: {}
[0.703404] (-) TimerEvent: {}
[0.805868] (-) TimerEvent: {}
[0.907378] (-) TimerEvent: {}
[1.008466] (-) TimerEvent: {}
[1.109225] (-) TimerEvent: {}
[1.210285] (-) TimerEvent: {}
[1.310966] (-) TimerEvent: {}
[1.413001] (-) TimerEvent: {}
[1.513922] (-) TimerEvent: {}
[1.615153] (-) TimerEvent: {}
[1.716136] (-) TimerEvent: {}
[1.817077] (-) TimerEvent: {}
[1.917726] (-) TimerEvent: {}
[2.018231] (-) TimerEvent: {}
[2.119840] (-) TimerEvent: {}
[2.221483] (-) TimerEvent: {}
[2.322445] (-) TimerEvent: {}
[2.423795] (-) TimerEvent: {}
[2.525096] (-) TimerEvent: {}
[2.626502] (-) TimerEvent: {}
[2.727279] (-) TimerEvent: {}
[2.828287] (-) TimerEvent: {}
[2.929343] (-) TimerEvent: {}
[3.031047] (-) TimerEvent: {}
[3.132607] (-) TimerEvent: {}
[3.233897] (-) TimerEvent: {}
[3.334965] (-) TimerEvent: {}
[3.436366] (-) TimerEvent: {}
[3.537323] (-) TimerEvent: {}
[3.638137] (-) TimerEvent: {}
[3.739047] (-) TimerEvent: {}
[3.840617] (-) TimerEvent: {}
[3.942097] (-) TimerEvent: {}
[4.043483] (-) TimerEvent: {}
[4.144229] (-) TimerEvent: {}
[4.245273] (-) TimerEvent: {}
[4.346974] (-) TimerEvent: {}
[4.448763] (-) TimerEvent: {}
[4.549792] (-) TimerEvent: {}
[4.651057] (-) TimerEvent: {}
[4.753294] (-) TimerEvent: {}
[4.855185] (-) TimerEvent: {}
[4.956144] (-) TimerEvent: {}
[5.058164] (-) TimerEvent: {}
[5.159421] (-) TimerEvent: {}
[5.260274] (-) TimerEvent: {}
[5.362130] (-) TimerEvent: {}
[5.463933] (-) TimerEvent: {}
[5.565294] (-) TimerEvent: {}
[5.666152] (-) TimerEvent: {}
[5.767606] (-) TimerEvent: {}
[5.869579] (-) TimerEvent: {}
[5.970927] (-) TimerEvent: {}
[6.071942] (-) TimerEvent: {}
[6.173350] (-) TimerEvent: {}
[6.275041] (-) TimerEvent: {}
[6.376396] (-) TimerEvent: {}
[6.477515] (-) TimerEvent: {}
[6.579202] (-) TimerEvent: {}
[6.680663] (-) TimerEvent: {}
[6.781375] (-) TimerEvent: {}
[6.883034] (-) TimerEvent: {}
[6.983716] (-) TimerEvent: {}
[7.085526] (-) TimerEvent: {}
[7.188096] (-) TimerEvent: {}
[7.289114] (-) TimerEvent: {}
[7.389885] (-) TimerEvent: {}
[7.490825] (-) TimerEvent: {}
[7.591945] (-) TimerEvent: {}
[7.693350] (-) TimerEvent: {}
[7.794393] (-) TimerEvent: {}
[7.895434] (-) TimerEvent: {}
[7.996855] (-) TimerEvent: {}
[8.098691] (-) TimerEvent: {}
[8.199796] (-) TimerEvent: {}
[8.301502] (-) TimerEvent: {}
[8.403300] (-) TimerEvent: {}
[8.504162] (-) TimerEvent: {}
[8.606190] (-) TimerEvent: {}
[8.707639] (-) TimerEvent: {}
[8.809011] (-) TimerEvent: {}
[8.910240] (-) TimerEvent: {}
[9.011440] (-) TimerEvent: {}
[9.113170] (-) TimerEvent: {}
[9.139076] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SubscriberNode::callbackIMU(sensor_msgs::msg::Imu_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.141096] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator*\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99)\n'}
[9.141444] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(0, 0) = \x1b[01;31m\x1b[Kmsg->orientation_covariance * msg->orientation_covariance\x1b[m\x1b[K;\n'}
[9.141646] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.141771] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.141956] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.142102] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.142257] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)\n'}
[9.142438] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const _Tp& __x, const complex<_Tp>& __y)\n'}
[9.142675] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.142944] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.143195] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.143535] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(0, 0) = msg->orientation_covariance * msg->\x1b[01;36m\x1b[Korientation_covariance\x1b[m\x1b[K;\n'}
[9.143753] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                    \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.143923] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.144086] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.144252] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.144523] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)\n'}
[9.144859] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const _Tp& __y)\n'}
[9.145010] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.145188] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.145404] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.145631] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(0, 0) = msg->orientation_covariance * msg->\x1b[01;36m\x1b[Korientation_covariance\x1b[m\x1b[K;\n'}
[9.145792] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                    \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.145939] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.146202] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.146415] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.146602] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)\n'}
[9.146994] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)\n'}
[9.147229] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.149191] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.150671] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:192:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.151398] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(0, 0) = msg->orientation_covariance * msg->\x1b[01;36m\x1b[Korientation_covariance\x1b[m\x1b[K;\n'}
[9.151675] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                    \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.151881] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator*\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99)\n'}
[9.152044] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(1, 1) = \x1b[01;31m\x1b[Kmsg->orientation_covariance * msg->orientation_covariance\x1b[m\x1b[K;\n'}
[9.152221] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.152384] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.152548] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.152715] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.152881] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)\n'}
[9.153044] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const _Tp& __x, const complex<_Tp>& __y)\n'}
[9.153220] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.153380] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.153545] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.154026] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(1, 1) = msg->orientation_covariance * msg->\x1b[01;36m\x1b[Korientation_covariance\x1b[m\x1b[K;\n'}
[9.154468] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                    \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.154943] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.155425] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.155855] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.156151] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)\n'}
[9.156307] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const _Tp& __y)\n'}
[9.156559] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.156988] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.157514] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.157850] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(1, 1) = msg->orientation_covariance * msg->\x1b[01;36m\x1b[Korientation_covariance\x1b[m\x1b[K;\n'}
[9.158095] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                    \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.158345] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.158562] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.158791] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.159131] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)\n'}
[9.159311] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)\n'}
[9.159479] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.159651] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.159837] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:193:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.160033] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(1, 1) = msg->orientation_covariance * msg->\x1b[01;36m\x1b[Korientation_covariance\x1b[m\x1b[K;\n'}
[9.160158] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                    \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.160324] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator*\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99)\n'}
[9.160506] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(2, 2) = \x1b[01;31m\x1b[Kmsg->orientation_covariance * msg->orientation_covariance\x1b[m\x1b[K;\n'}
[9.160661] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.160800] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.160930] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.161064] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.161230] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)\n'}
[9.161412] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const _Tp& __x, const complex<_Tp>& __y)\n'}
[9.161568] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.161746] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.161892] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.162043] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(2, 2) = msg->orientation_covariance * msg->\x1b[01;36m\x1b[Korientation_covariance\x1b[m\x1b[K;\n'}
[9.162165] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                    \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.162455] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.162844] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.163303] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.163788] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)\n'}
[9.164198] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const _Tp& __y)\n'}
[9.164578] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.164823] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.165075] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.165370] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(2, 2) = msg->orientation_covariance * msg->\x1b[01;36m\x1b[Korientation_covariance\x1b[m\x1b[K;\n'}
[9.165585] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                    \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.165783] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.165963] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.166149] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.166429] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)\n'}
[9.166667] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)\n'}
[9.166991] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.167521] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.168113] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:194:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_orientation_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.168657] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(2, 2) = msg->orientation_covariance * msg->\x1b[01;36m\x1b[Korientation_covariance\x1b[m\x1b[K;\n'}
[9.168865] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                    \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.168999] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:50:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator*\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99)\n'}
[9.169184] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(3, 3) = \x1b[01;31m\x1b[Kmsg->angular_velocity_covariance * msg->angular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.169387] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.169571] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.169746] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.169923] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.170164] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)\n'}
[9.170354] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const _Tp& __x, const complex<_Tp>& __y)\n'}
[9.170549] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.170728] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.170961] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.171095] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(3, 3) = msg->angular_velocity_covariance * msg->\x1b[01;36m\x1b[Kangular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.171223] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                         \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.171346] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.171458] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.171563] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.171689] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)\n'}
[9.171967] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const _Tp& __y)\n'}
[9.172166] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.172311] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.172479] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.172632] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(3, 3) = msg->angular_velocity_covariance * msg->\x1b[01;36m\x1b[Kangular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.172800] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                         \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.173005] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.173183] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.173317] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.173524] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)\n'}
[9.173763] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)\n'}
[9.174019] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.174623] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.175192] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:195:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.175545] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(3, 3) = msg->angular_velocity_covariance * msg->\x1b[01;36m\x1b[Kangular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.175672] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                         \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.175830] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:50:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator*\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99)\n'}
[9.176020] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(4, 4) = \x1b[01;31m\x1b[Kmsg->angular_velocity_covariance * msg->angular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.176190] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.176327] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.176452] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.176600] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.176722] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)\n'}
[9.176839] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const _Tp& __x, const complex<_Tp>& __y)\n'}
[9.176959] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.177069] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.177189] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.177355] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(4, 4) = msg->angular_velocity_covariance * msg->\x1b[01;36m\x1b[Kangular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.177497] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                         \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.177649] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.177760] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.177865] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.177973] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)\n'}
[9.178104] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const _Tp& __y)\n'}
[9.178210] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.178318] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.178479] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.178662] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(4, 4) = msg->angular_velocity_covariance * msg->\x1b[01;36m\x1b[Kangular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.178821] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                         \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.178941] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.179062] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.179215] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.180084] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)\n'}
[9.180980] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)\n'}
[9.181410] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.181991] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.182277] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:196:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.182601] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(4, 4) = msg->angular_velocity_covariance * msg->\x1b[01;36m\x1b[Kangular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.182726] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                         \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.182916] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:50:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator*\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99)\n'}
[9.183242] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(5, 5) = \x1b[01;31m\x1b[Kmsg->angular_velocity_covariance * msg->angular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.183487] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.183808] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.184090] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.184282] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.184447] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)\n'}
[9.184576] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const _Tp& __x, const complex<_Tp>& __y)\n'}
[9.184766] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.184992] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:404:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.185229] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.185507] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(5, 5) = msg->angular_velocity_covariance * msg->\x1b[01;36m\x1b[Kangular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.185716] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                         \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.185964] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.186296] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.188691] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.189775] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)\n'}
[9.190249] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const _Tp& __y)\n'}
[9.190458] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.190665] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:395:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.190887] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.191139] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(5, 5) = msg->angular_velocity_covariance * msg->\x1b[01;36m\x1b[Kangular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.191359] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                         \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.191598] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:80:0\x1b[m\x1b[K,\n'}
[9.191791] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[9.192025] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:8\x1b[m\x1b[K:\n'}
[9.192337] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)\n'}
[9.192634] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)\n'}
[9.192900] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.193245] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/complex:386:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[9.193629] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:197:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >::_angular_velocity_covariance_type {aka std::array<double, 9>}\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.194031] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'       R(5, 5) = msg->angular_velocity_covariance * msg->\x1b[01;36m\x1b[Kangular_velocity_covariance\x1b[m\x1b[K;\n'}
[9.194527] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                         \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.213409] (-) TimerEvent: {}
[9.315205] (-) TimerEvent: {}
[9.416137] (-) TimerEvent: {}
[9.516917] (-) TimerEvent: {}
[9.617841] (-) TimerEvent: {}
[9.647808] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SubscriberNode::callbackGroundTruth(gazebo_msgs::msg::LinkStates_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.649315] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/zeiad/sensorfusion_ros2_ws/src/kalmenfilter_cpp_pkg/src/state_subscriber.cpp:330:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kmsg\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[9.649954] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'   void callbackGroundTruth(const gazebo_msgs::msg::LinkStates::SharedPtr \x1b[01;35m\x1b[Kmsg\x1b[m\x1b[K)\n'}
[9.650603] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'                                                                          \x1b[01;35m\x1b[K^~~\x1b[m\x1b[K\n'}
[9.718159] (-) TimerEvent: {}
[9.819794] (-) TimerEvent: {}
[9.921025] (-) TimerEvent: {}
[10.022366] (-) TimerEvent: {}
[10.123810] (-) TimerEvent: {}
[10.225155] (-) TimerEvent: {}
[10.327117] (-) TimerEvent: {}
[10.428807] (-) TimerEvent: {}
[10.530395] (-) TimerEvent: {}
[10.631383] (-) TimerEvent: {}
[10.732729] (-) TimerEvent: {}
[10.833503] (-) TimerEvent: {}
[10.934257] (-) TimerEvent: {}
[11.035594] (-) TimerEvent: {}
[11.136864] (-) TimerEvent: {}
[11.238269] (-) TimerEvent: {}
[11.339028] (-) TimerEvent: {}
[11.439919] (-) TimerEvent: {}
[11.540821] (-) TimerEvent: {}
[11.642330] (-) TimerEvent: {}
[11.743783] (-) TimerEvent: {}
[11.844610] (-) TimerEvent: {}
[11.945506] (-) TimerEvent: {}
[12.046564] (-) TimerEvent: {}
[12.146930] (-) TimerEvent: {}
[12.247577] (-) TimerEvent: {}
[12.348799] (-) TimerEvent: {}
[12.449383] (-) TimerEvent: {}
[12.550506] (-) TimerEvent: {}
[12.651718] (-) TimerEvent: {}
[12.753188] (-) TimerEvent: {}
[12.854533] (-) TimerEvent: {}
[12.955902] (-) TimerEvent: {}
[13.057873] (-) TimerEvent: {}
[13.158694] (-) TimerEvent: {}
[13.259430] (-) TimerEvent: {}
[13.360169] (-) TimerEvent: {}
[13.460706] (-) TimerEvent: {}
[13.561469] (-) TimerEvent: {}
[13.662212] (-) TimerEvent: {}
[13.762921] (-) TimerEvent: {}
[13.863492] (-) TimerEvent: {}
[13.964128] (-) TimerEvent: {}
[14.064820] (-) TimerEvent: {}
[14.165940] (-) TimerEvent: {}
[14.267214] (-) TimerEvent: {}
[14.368450] (-) TimerEvent: {}
[14.469479] (-) TimerEvent: {}
[14.570680] (-) TimerEvent: {}
[14.672079] (-) TimerEvent: {}
[14.773348] (-) TimerEvent: {}
[14.874255] (-) TimerEvent: {}
[14.975693] (-) TimerEvent: {}
[15.076308] (-) TimerEvent: {}
[15.176989] (-) TimerEvent: {}
[15.277677] (-) TimerEvent: {}
[15.378445] (-) TimerEvent: {}
[15.479349] (-) TimerEvent: {}
[15.580736] (-) TimerEvent: {}
[15.682278] (-) TimerEvent: {}
[15.783137] (-) TimerEvent: {}
[15.884106] (-) TimerEvent: {}
[15.985434] (-) TimerEvent: {}
[16.086350] (-) TimerEvent: {}
[16.186996] (-) TimerEvent: {}
[16.287868] (-) TimerEvent: {}
[16.389052] (-) TimerEvent: {}
[16.489927] (-) TimerEvent: {}
[16.590719] (-) TimerEvent: {}
[16.691449] (-) TimerEvent: {}
[16.792010] (-) TimerEvent: {}
[16.893141] (-) TimerEvent: {}
[16.994118] (-) TimerEvent: {}
[17.095474] (-) TimerEvent: {}
[17.196323] (-) TimerEvent: {}
[17.297342] (-) TimerEvent: {}
[17.398122] (-) TimerEvent: {}
[17.499643] (-) TimerEvent: {}
[17.600571] (-) TimerEvent: {}
[17.701561] (-) TimerEvent: {}
[17.803221] (-) TimerEvent: {}
[17.905327] (-) TimerEvent: {}
[18.006718] (-) TimerEvent: {}
[18.108025] (-) TimerEvent: {}
[18.208961] (-) TimerEvent: {}
[18.310334] (-) TimerEvent: {}
[18.411642] (-) TimerEvent: {}
[18.512605] (-) TimerEvent: {}
[18.613974] (-) TimerEvent: {}
[18.716022] (-) TimerEvent: {}
[18.817243] (-) TimerEvent: {}
[18.918283] (-) TimerEvent: {}
[19.019486] (-) TimerEvent: {}
[19.120428] (-) TimerEvent: {}
[19.222037] (-) TimerEvent: {}
[19.323167] (-) TimerEvent: {}
[19.424348] (-) TimerEvent: {}
[19.525900] (-) TimerEvent: {}
[19.627021] (-) TimerEvent: {}
[19.728529] (-) TimerEvent: {}
[19.829457] (-) TimerEvent: {}
[19.930971] (-) TimerEvent: {}
[20.031869] (-) TimerEvent: {}
[20.133187] (-) TimerEvent: {}
[20.234100] (-) TimerEvent: {}
[20.335312] (-) TimerEvent: {}
[20.436421] (-) TimerEvent: {}
[20.537470] (-) TimerEvent: {}
[20.638168] (-) TimerEvent: {}
[20.739277] (-) TimerEvent: {}
[20.840604] (-) TimerEvent: {}
[20.941371] (-) TimerEvent: {}
[21.042219] (-) TimerEvent: {}
[21.143325] (-) TimerEvent: {}
[21.244420] (-) TimerEvent: {}
[21.345738] (-) TimerEvent: {}
[21.446804] (-) TimerEvent: {}
[21.547843] (-) TimerEvent: {}
[21.648764] (-) TimerEvent: {}
[21.749705] (-) TimerEvent: {}
[21.850651] (-) TimerEvent: {}
[21.953033] (-) TimerEvent: {}
[22.053930] (-) TimerEvent: {}
[22.154977] (-) TimerEvent: {}
[22.256090] (-) TimerEvent: {}
[22.357002] (-) TimerEvent: {}
[22.458238] (-) TimerEvent: {}
[22.559089] (-) TimerEvent: {}
[22.660437] (-) TimerEvent: {}
[22.761202] (-) TimerEvent: {}
[22.861975] (-) TimerEvent: {}
[22.962820] (-) TimerEvent: {}
[23.063966] (-) TimerEvent: {}
[23.164663] (-) TimerEvent: {}
[23.266004] (-) TimerEvent: {}
[23.366948] (-) TimerEvent: {}
[23.467885] (-) TimerEvent: {}
[23.568707] (-) TimerEvent: {}
[23.670589] (-) TimerEvent: {}
[23.771216] (-) TimerEvent: {}
[23.872337] (-) TimerEvent: {}
[23.973049] (-) TimerEvent: {}
[24.074412] (-) TimerEvent: {}
[24.175171] (-) TimerEvent: {}
[24.276323] (-) TimerEvent: {}
[24.376952] (-) TimerEvent: {}
[24.477626] (-) TimerEvent: {}
[24.578379] (-) TimerEvent: {}
[24.679404] (-) TimerEvent: {}
[24.780497] (-) TimerEvent: {}
[24.881510] (-) TimerEvent: {}
[24.982250] (-) TimerEvent: {}
[25.083459] (-) TimerEvent: {}
[25.184252] (-) TimerEvent: {}
[25.285046] (-) TimerEvent: {}
[25.386130] (-) TimerEvent: {}
[25.487208] (-) TimerEvent: {}
[25.589005] (-) TimerEvent: {}
[25.689905] (-) TimerEvent: {}
[25.791513] (-) TimerEvent: {}
[25.892906] (-) TimerEvent: {}
[25.994131] (-) TimerEvent: {}
[26.095370] (-) TimerEvent: {}
[26.196539] (-) TimerEvent: {}
[26.297482] (-) TimerEvent: {}
[26.398877] (-) TimerEvent: {}
[26.500734] (-) TimerEvent: {}
[26.601306] (-) TimerEvent: {}
[26.701692] (-) TimerEvent: {}
[26.802444] (-) TimerEvent: {}
[26.877289] (kalmenfilter_cpp_pkg) StdoutLine: {'line': b"CMakeFiles/state_subscriber.dir/build.make:62: recipe for target 'CMakeFiles/state_subscriber.dir/src/state_subscriber.cpp.o' failed\n"}
[26.880661] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'make[2]: *** [CMakeFiles/state_subscriber.dir/src/state_subscriber.cpp.o] Error 1\n'}
[26.881669] (kalmenfilter_cpp_pkg) StdoutLine: {'line': b"CMakeFiles/Makefile2:99: recipe for target 'CMakeFiles/state_subscriber.dir/all' failed\n"}
[26.881999] (kalmenfilter_cpp_pkg) StdoutLine: {'line': b"Makefile:140: recipe for target 'all' failed\n"}
[26.882287] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'make[1]: *** [CMakeFiles/state_subscriber.dir/all] Error 2\n'}
[26.882523] (kalmenfilter_cpp_pkg) StderrLine: {'line': b'make: *** [all] Error 2\n'}
[26.886099] (kalmenfilter_cpp_pkg) CommandEnded: {'returncode': 2}
[26.902959] (-) TimerEvent: {}
[27.004944] (-) TimerEvent: {}
[27.106800] (-) TimerEvent: {}
[27.155021] (kalmenfilter_cpp_pkg) JobEnded: {'identifier': 'kalmenfilter_cpp_pkg', 'rc': 2}
[27.170622] (-) EventReactorShutdown: {}
